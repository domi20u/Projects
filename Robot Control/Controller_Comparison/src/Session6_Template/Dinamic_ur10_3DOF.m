%This file was atutomatically generated by --Generate_Dinamic--
%the input vector is:
%u=[q1 q2 q3 qp4 qp5 qp6 L1 L2 L4 L6 L7 L9 L3 L5 L8 L10 ]
%NOTE: The function --Genera_Robot_ur10_3DOF_Exe-- must be executed
%before running the simulink-simulator for the first time
function Qpp=Dinamic_ur10_3DOF(u)
persistent V Q1 Q2 Q3 X Y Z counter t_end;
global mode
%Joint Position
q1=u(1);
q2=u(2);
q3=u(3);

%Joint Velocity
qp1=u(4);
qp2=u(5);
qp3=u(6);

%Kinematic Parameters
L1=u(7);
L2=u(8);
L4=u(9);
L6=u(10);
L7=u(11);
L9=u(12);
L3=u(13);
L5=u(14);
L8=u(15);
L10=u(16);

%Dynamic Parameters
m1=u(17);
m2=u(18);
m3=u(19);

I111=u(20);
I112=u(21);
I113=u(22);
I122=u(23);
I123=u(24);
I133=u(25);

I211=u(26);
I212=u(27);
I213=u(28);
I222=u(29);
I223=u(30);
I233=u(31);

I311=u(32);
I312=u(33);
I313=u(34);
I322=u(35);
I323=u(36);
I333=u(37);

%Gravity
g=u(38);
%Time
t=u(39);
%Viscous Friction Matrix
Beta(1,1)=u(40);
Beta(2,2)=u(41);
Beta(3,3)=u(42);
%Gravity Vector
gx=u(43);
gy=u(44);
gz=u(45);



%Joint Position Vector
Q=[q1; q2; q3];

%Joint Velocity Vector
Qp=[qp1; qp2; qp3];

%Inertia Matrix
I = [I111,I112,I113,I122,I123,I133,I211,I212,I213,I222,I223,I233,I311,I312,I313,I322,I323,I333];
[~,~,MCG]=Hts_J_MCG(qp1,qp2,qp3,q1,q2,q3,m1,m2,m3,L1,L2,L3,L4,L5,L6,L7,L8,L9,L10,I,g,gx,gy,gz);

M=MCG{1};


%Centripetal and Coriolis Matrix
C=MCG{2};


%Gravitational Torques Vector
G=MCG{3};

Tao=[u(46);u(47);u(48)];

Qpp=(M)\(Tao-C*Qp-G-Beta*Qp);

sampleTime = 0.06;
if t==0
    dt = str2double(get_param('DSimulator_robot3GDL','FixedStep'));
    t_end = str2double(get_param('DSimulator_robot3GDL','StopTime'));
    %t_end = 10;
    V=zeros(round(t_end*sampleTime/dt),1);
    Q1=zeros(round(t_end*sampleTime/dt),1);
    Q2=zeros(round(t_end*sampleTime/dt),1);
    Q3=zeros(round(t_end*sampleTime/dt),1);
    X=zeros(round(t_end*sampleTime/dt),1);
    Y=zeros(round(t_end*sampleTime/dt),1);
    Z=zeros(round(t_end*sampleTime/dt),1);
    counter = 0;
end

%if mode == 11 || mode == 12
    
%end

    
    
end
